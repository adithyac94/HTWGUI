package htwcontroller;

/**
 * This interface represents a set of features that the program offers. Each
 * feature is exposed as a function in this interface. This function is used
 * suitably as a callback by the view, to pass control to the controller. How
 * the view uses them as callbacks is completely up to how the view is designed.
 *
 * Each function is designed to take in the necessary data to complete that
 * functionality.
 */
public interface Features {
  
  /**
   * This method moves the player in the direction specified by the user.
   * It also checks if the player is eaten by the wumpus, picked up by a bat or
   * has fallen into a pit.
   * 
   * @param dir direction
   * 
   */
  void movePlayer(String direction);
  
  /**
   * This method moves the player in the direction specified by the user.
   * It also checks if the player is eaten by the wumpus, picked up by a bat or
   * has fallen into a pit.
   * 
   * @param pos Position of the player
   * @param newPos Position the player wants to move to
   * 
   */
  void getAdjacentRooms(int pos, int newPos);
  
  /**
   * This method enables the player to shoot an arrow given the direction and the number of caves.
   * 
   * @param caveDirection The direction
   * @param caveNum The number of caves
   * 
   */
  void shootArrow(String caveDirection, int caveNum);
  
  /**
   * This method gets the start position of player 1.
   * 
   * @return integer
   * 
   */
  int getStartPosition();
  
  /**
   * This method gets the start position of player 2.
   * 
   * @return integer
   * 
   */
  int getSecondStartPosition();
  
  /**
   * This method generates the grid.
   * 
   * @return integer
   * 
   */
  void generateGrid();

}
